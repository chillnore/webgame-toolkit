<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   backgroundColor="#E8E8E8"
					   width="800"
					   height="600"
					   nativeDragEnter.init="app_nativeDragEnterHandler(event)"
					   nativeDragDrop.init="app_nativeDragDropHandler(event)"
					   showStatusBar="false">

	<fx:Style source="styles/styles.css"/>

	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.events.FlexEvent;
			import mx.managers.DragManager;

			import spark.collections.Sort;
			import spark.collections.SortField;

			protected function app_nativeDragEnterHandler(event : NativeDragEvent) : void
			{
				if (event.clipboard.hasFormat(ClipboardFormats.FILE_LIST_FORMAT))
				{
					var fileArray : Array = event.clipboard.getData(ClipboardFormats.FILE_LIST_FORMAT) as Array;
					if (fileArray.length == 1
						&& fileArray[0] is File
						&& fileArray[0].isDirectory)
					{
						DragManager.acceptDragDrop(this);
					}
				}
			}

			protected function app_nativeDragDropHandler(event : NativeDragEvent) : void
			{
				var folder : File = event.clipboard.getData(ClipboardFormats.FILE_LIST_FORMAT)[0];
				this.currentState = "proc";
				setupProc(folder);
			}

			[Bindable]
			private var files : ArrayCollection;

			private function setupProc(folder : File) : void
			{
				var fileArray : Array = filterFiles(folder);
				files = new ArrayCollection(fileArray);
				var sort : Sort = new Sort();
				sort.compareFunction = compareFiles;
				files.sort = sort;
				files.refresh();
			}

			private function filterFiles(folder : File) : Array
			{
				var files : Array = folder.getDirectoryListing();
				var i : int = files.length;
				while (--i > -1)
				{
					isImageFile(files[i]) || files.splice(i, 1);
				}

				return files;
			}

			private function isImageFile(file : File) : Boolean
			{
				var acceptedExt : Array = ["jpg", "jpeg", "bmp", "png"];

				return acceptedExt.indexOf(file.extension) > -1;
			}

			private function compareFiles(a : Object, b : Object, fields : Array) : int
			{
				var id1 : int = parseInt(a.name.split(".")[0]);
				var id2 : int = parseInt(b.name.split(".")[0]);

				if (id1 > id2)
				{
					return 1;
				}
				else if (id1 == id2)
				{
					return 0;
				}
				else
				{
					return -1;
				}
			}
		]]>
	</fx:Script>

	<s:states>
		<s:State name="init"/>
		<s:State name="proc"/>
	</s:states>

	<s:Label includeIn="init"
			 text="拖动文件夹到这里"
			 fontSize="24"
			 color="#888888"
			 horizontalCenter="0"
			 verticalCenter="0"/>
	<s:HGroup includeIn="proc"
			  left="0"
			  right="0"
			  top="0"
			  bottom="0"
			  gap="1">
		<s:List id="fileList"
				height="100%"
				width="200"
				dataProvider="{files}"
				itemRenderer="statm.dev.spritebuilder.ui.skins.itemRenderers.FileListItemRenderer"
				borderVisible="false"/>
		<s:Group width="100%"
				 height="100%">
			<s:Rect width="100%"
					height="100%">
				<s:fill>
					<s:SolidColor color="#FF9900"/>
				</s:fill>
			</s:Rect>
		</s:Group>
	</s:HGroup>
</s:WindowedApplication>
